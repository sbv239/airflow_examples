from datetime import datetime, timedelta
from textwrap import dedent
from airflow import DAG

from airflow.operators.bash import BashOperator
from airflow.operators.python import PythonOperator
from airflow.providers.postgres.operators.postgres import PostgresHook
from psycopg2.extras import RealDictCursor

def get_user():
    postgres = PostgresHook(postgres_conn_id="startml_feed")
    with postgres.get_conn(cursor_factory=RealDictCursor) as conn:
        with conn.cursor() as cursor:
            cursor.execute("""                   
                with tmp as (
                    SELECT user_id, count(action) as count
                    FROM feed_action
                    group by user_id
                    ) 
                    select user_id, count
                from tmp
                    where count = (select max(count) from tmp)
            """)
            results = cursor.fetchall()
            return results

with DAG(
    'hw_10_j-ponomareva_01',
    default_args={
        'depends_on_past': False,
        'email': ['airflow@example.com'],
        'email_on_failure': False,
        'email_on_retry': False,
        'retries': 1,
        'retry_delay': timedelta(minutes=5
    },
    description='SDV dag for task 11.11',
    schedule_interval=timedelta(days=1),
    start_date=datetime(2022, 1, 1),
    catchup=False,
    tags=['example'],
) as dag:
    print_data = PythonOperator(
        task_id = 'analyze_data',
        python_callable=get_user,
    )

    print_data
